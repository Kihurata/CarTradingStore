//scr/routes/listingRoutes.ts
import { Router } from "express";
import { authenticateToken, requireAdmin } from "../middleware/auth";
import * as listingController from "../controllers/listingController";
import multer from "multer";

const upload = multer({ storage: multer.memoryStorage() });
const router = Router();

// Danh s√°ch b√†i ƒëƒÉng
router.get("/", listingController.getAllListings);

// Chi ti·∫øt 1 b√†i ƒëƒÉng
router.get("/:id", listingController.getListing);

// B√†i ƒëƒÉng theo user
router.get("/user/:userId", authenticateToken, listingController.getUserListings);

// üß© T·∫°o m·ªõi listing (ch·∫•p nh·∫≠n c·∫£ JSON ho·∫∑c multipart)
router.post(
  "/",
  authenticateToken,
  (req, res, next) => {
    const contentType = req.headers["content-type"] || "";
    if (contentType.includes("multipart/form-data")) {
      // N·∫øu l√† form c√≥ ·∫£nh
      upload.array("images")(req, res, next);
    } else {
      // N·∫øu l√† JSON
      next();
    }
  },
  listingController.createListing
);

// S·ª≠a
router.put("/:id", authenticateToken, listingController.editListing);

// Duy·ªát b√†i (admin)
router.patch("/:id/status", authenticateToken, requireAdmin, listingController.approveListing);

// Xo√° b√†i (admin)
router.delete("/:id", authenticateToken, requireAdmin, listingController.deleteListing);

// H√†nh ƒë·ªông kh√°c
router.post("/:id/favorite", authenticateToken, listingController.addFavorite);
router.post("/:id/comparison", authenticateToken, listingController.addComparison);
router.post("/:id/report", authenticateToken, listingController.reportViolation);

// ƒê·ªãa ƒëi·ªÉm
router.get("/locations/provinces", listingController.getProvinces);
router.get("/locations/districts", listingController.getDistrictsByProvince);


// Brands & Models
router.get("/brands", listingController.getBrands);
router.get("/models", listingController.getModelsByBrand);
export default router;
